{
	"info": {
		"_postman_id": "0dc23ebd-8467-435f-dfcd-9a60ab721755",
		"name": "Se7en Scheduler",
		"description": "ESC Smart Scheduler Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"description": "API calls related to Users, such as creating a user, getting a user by id, deleting user, etc",
			"item": [
				{
					"name": "GetUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b880b628-6731-4136-872f-8a8f4f9dc18e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"     pm.response.to.not.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test('Check known email was pulled', function () {",
									"    jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(\"rayson.ljk@gmail.com\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Users/4",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Users",
								"4"
							]
						},
						"description": "Users: Get user details using user's id in SQL table\n"
					},
					"response": [
						{
							"id": "32b064a3-1df4-4ffc-8269-a2a9efb133da",
							"name": "GetUserById",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Users/4",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Users",
										"4"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "292",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 11:26:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"124-sachytBKzaf7+yUzUV+V21DBYo4\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"id\":4,\"name\":\"Rayson Lim\",\"email\":\"rayson.ljk@gmail.com\",\"phone\":96164293,\"employee_id\":1002026,\"passwordHash\":\"b9a9e5d2c8d1cd387f0e19e47c3fb0b09051583c25bf49010fdf1a2754ce49ad696009d8dc12494690f81959532fbfd9172e220ebab5df952718aa87280b36da\",\"salt\":\"XYOyCTCnc32j5\",\"admin\":1,\"success\":true}"
						}
					]
				},
				{
					"name": "GetAllUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76e26015-5b70-49ff-bd05-73e8f7b8b47e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"     pm.response.to.not.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Check known user was pulled\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Rayson Lim\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Users",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Users"
							]
						},
						"description": "Users: Get all users"
					},
					"response": [
						{
							"id": "8d3cdedc-66e5-4d69-b729-60f51f89261f",
							"name": "GetAllUsers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Users",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "1614",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 10:39:43 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"64e-GvN7D6U1pWu61JiOYDeoLcy4ikg\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":4,\"name\":\"Rayson Lim\",\"email\":\"rayson.ljk@gmail.com\",\"phone\":96164293,\"employee_id\":1002026,\"passwordHash\":\"b9a9e5d2c8d1cd387f0e19e47c3fb0b09051583c25bf49010fdf1a2754ce49ad696009d8dc12494690f81959532fbfd9172e220ebab5df952718aa87280b36da\",\"salt\":\"XYOyCTCnc32j5\",\"admin\":1},{\"id\":5,\"name\":\"Ang\",\"email\":\"email@email.com\",\"phone\":88881111,\"employee_id\":1002417,\"passwordHash\":\"fc98181b9fd62fd15000d1f37d21299632fa481ddf093b3a2222b0fcc33f256c6bec76e4478b5fe619271805a2c5df3fef51425a0da266c53cf657ead01fd863\",\"salt\":\"MU2SyXQpWYDdy\",\"admin\":1},{\"id\":6,\"name\":\"A\",\"email\":\"angelialkm@gmail.com\",\"phone\":97921682,\"employee_id\":10024,\"passwordHash\":\"cdba8f6851134dbfecc2c0be254f64c7c17ab241179ec6a3835a95bf80353e5759b226941ca38e4919c6701d14c84565c00402b8a0947b61d83c9c1b0b238ede\",\"salt\":\"d7Hojz1gROMHp\",\"admin\":0},{\"id\":7,\"name\":\"A\",\"email\":\"angelialkm@gmail.com\",\"phone\":97921682,\"employee_id\":10024,\"passwordHash\":\"59d707c3fc92e124883f8bd33d80cd72f58b134703aa78347dd8ab94dc3a66c9e470a058453413bf2c322a25c61acae79ff48d5544144e29eda84bf2832f143e\",\"salt\":\"LUn89a983ZvLs\",\"admin\":0},{\"id\":8,\"name\":\"a\",\"email\":\"angelialkm@gmail.com\",\"phone\":97921682,\"employee_id\":10024,\"passwordHash\":\"13ca007c9bcf658d67f9a3c3d8bdad11a96d8c2f253315538fb33cddd01df09efab66bba5e1d59e974f2c69443b9aad65afe19a0dd4bc8763ccc94ed8c251e19\",\"salt\":\"P5jpEjOYQ9u7Y\",\"admin\":0},{\"id\":9,\"name\":\"Angelia \",\"email\":\"booya@mail.com\",\"phone\":81234566,\"employee_id\":20913,\"passwordHash\":\"279f018dbf661e9282372aaf981053a560d75420faf9a2f9ef1d6c6c2e05e2050ec77dd9241090a0f3da522eb3048509612622e5b8d90b422d05c8eeb392a2cd\",\"salt\":\"UU6r0zE1HdMKU\",\"admin\":0}]"
						}
					]
				},
				{
					"name": "CreateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94206c4e-d98a-40f8-bc53-a36155d01439",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Check user was created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    ",
									"    var insertId = jsonData.insertId;",
									"    ",
									"    pm.sendRequest(\"http://devostrum.no-ip.info:6666/Users/\" + insertId, function (err, response) {",
									"        var data = response.json();",
									"        pm.expect(data.id).to.eql(insertId);",
									"    });",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Pang Yang Huei",
									"description": "",
									"type": "text"
								},
								{
									"key": "email",
									"value": "tester@test.com",
									"description": "",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "00000000",
									"description": "",
									"type": "text"
								},
								{
									"key": "password",
									"value": "test",
									"description": "",
									"type": "text"
								},
								{
									"key": "pillar",
									"value": "HASS",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Users",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Users"
							]
						},
						"description": "Users: Add a new user to database"
					},
					"response": [
						{
							"id": "b1d26b40-5339-40ec-8c11-8590a00f5f29",
							"name": "CreateUser",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Tester",
											"description": "",
											"type": "text"
										},
										{
											"key": "email",
											"value": "tester@test.com",
											"description": "",
											"type": "text"
										},
										{
											"key": "phone",
											"value": "00000000",
											"description": "",
											"type": "text"
										},
										{
											"key": "password",
											"value": "test",
											"description": "",
											"type": "text"
										},
										{
											"key": "admin",
											"value": "0",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Users",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "128",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 11:27:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"80-PseEFFOtlx9Rvsy5j2WMlWr/rGk\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":10,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0}"
						},
						{
							"id": "0626b7c5-a3ab-423e-87ef-1c4f6931f6a6",
							"name": "Fail:CreateUser",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Tester",
											"description": "",
											"type": "text"
										},
										{
											"key": "email",
											"value": "tester@test.com",
											"description": "",
											"type": "text"
										},
										{
											"key": "phone",
											"value": "00000000",
											"description": "",
											"type": "text"
										},
										{
											"key": "password",
											"value": "test",
											"description": "",
											"type": "text"
										},
										{
											"key": "admin",
											"value": "0",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Users",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 11:28:30 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"24-qVtlCnY7BwbSCDdd9ZAYoIvn+GM\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"message\":\"post params incomplete\"}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02595ae2-fe51-45d8-8c62-4565fff25115",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"    pm.response.to.not.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Login successful\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(4);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "Lujie@gmail.com",
									"description": "",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Users/Login",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Users",
								"Login"
							]
						},
						"description": "Users: Checks if the employee id exists in database. If employee id does exist, it checks if password is correct."
					},
					"response": [
						{
							"id": "554e5a1b-7606-4e04-9db8-fefd1bac4318",
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "employee_id",
											"value": "1002026",
											"description": "",
											"type": "text"
										},
										{
											"key": "password",
											"value": "test",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Users/Login",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Users",
										"Login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "277",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 10:44:26 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"115-PCvFUUes/znJOTEaoYq5bf9kyqo\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"id\":4,\"name\":\"Rayson Lim\",\"email\":\"rayson.ljk@gmail.com\",\"phone\":96164293,\"employee_id\":1002026,\"passwordHash\":\"b9a9e5d2c8d1cd387f0e19e47c3fb0b09051583c25bf49010fdf1a2754ce49ad696009d8dc12494690f81959532fbfd9172e220ebab5df952718aa87280b36da\",\"salt\":\"XYOyCTCnc32j5\",\"admin\":1}"
						}
					]
				},
				{
					"name": "GetInstructors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06219366-a1ac-4014-9300-c3e99f6993fe",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"     pm.response.to.not.have.jsonBody(\"message\");",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Only Instructors pulled\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i].pillar).to.not.eql(\"Adminstrator\");  ",
									"    }",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Users/Instructors",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Users",
								"Instructors"
							]
						},
						"description": "Gives you all the instructors "
					},
					"response": []
				},
				{
					"name": "GetUsersByPillar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfaa1c56-691d-4752-afbd-93e63976ba75",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Only ISTD Pillar pulled\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i = 0; i < jsonData.length; i++) {",
									"        pm.expect(jsonData[i].pillar).to.eql(\"ISTD\");  ",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Users/Pillar/ISTD",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Users",
								"Pillar",
								"ISTD"
							]
						},
						"description": "Gives you all the users belonging to the input pillar"
					},
					"response": []
				},
				{
					"name": "ChangePassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63d17b77-7d96-4b0a-b517-90867b8c9a24",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "4",
									"description": "",
									"type": "text"
								},
								{
									"key": "oldPassword",
									"value": "test",
									"description": "",
									"type": "text"
								},
								{
									"key": "newPassword",
									"value": "password",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Users/ChangePassword",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Users",
								"ChangePassword"
							]
						},
						"description": "Allows user to change password if the old password is correct"
					},
					"response": [
						{
							"id": "ebdbeae4-0cbc-46ac-ad82-7e38d31f3559",
							"name": "ChangePassword",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "4",
											"description": "",
											"type": "text"
										},
										{
											"key": "oldPassword",
											"value": "test",
											"description": "",
											"type": "text"
										},
										{
											"key": "newPassword",
											"value": "password",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Users/ChangePassword",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Users",
										"ChangePassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "183",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 26 Mar 2018 15:50:29 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"b7-wFSMg3bpWPGwL1i1U+H/SSst7aU\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"(Rows matched: 1  Changed: 1  Warnings: 0\",\"protocol41\":true,\"changedRows\":1,\"success\":true}"
						}
					]
				}
			]
		},
		{
			"name": "Schedules",
			"description": "API calls related to schedules, such as creating schedules and upating schedules",
			"item": [
				{
					"name": "DeleteSchedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8bafbb7-2864-4487-9673-a20fd79b4eb1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Check schedule exists no more\", function () {",
									"    pm.sendRequest(\"http://devostrum.no-ip.info:6666/Schedules/\" + \"1\", function (err, response) {",
									"        var data = response.json();",
									"        pm.expect(data.success).to.be.eql(false);",
									"    });",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "1",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Schedules/Delete",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Schedules",
								"Delete"
							]
						},
						"description": "Schedules: Delete a schedule with corresponding id"
					},
					"response": [
						{
							"id": "73e08222-4299-4fbb-8f42-18b107f9602f",
							"name": "DeleteSchedule",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "1",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Schedules/Delete",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Schedules",
										"Delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 13:19:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-LqKBN6Jyh3mewN0Bb0EY5ul9swA\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				},
				{
					"name": "UpdateSchedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a30311df-6731-4707-8d47-c3953a0196e3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "courses",
									"value": "1",
									"description": "",
									"type": "text"
								},
								{
									"key": "year",
									"value": "2018",
									"description": "",
									"type": "text"
								},
								{
									"key": "trimester",
									"value": "2",
									"description": "",
									"type": "text"
								},
								{
									"key": "id",
									"value": "1",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Schedules/Update",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Schedules",
								"Update"
							]
						},
						"description": "Schedules: update courses, year and trimester of schedule with schedule id"
					},
					"response": [
						{
							"id": "469785e4-e78a-4e8f-98ac-883338504299",
							"name": "UpdateSchedule",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "courses",
											"value": "1",
											"description": "",
											"type": "text"
										},
										{
											"key": "year",
											"value": "2018",
											"description": "",
											"type": "text"
										},
										{
											"key": "trimester",
											"value": "2",
											"description": "",
											"type": "text"
										},
										{
											"key": "id",
											"value": "1",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Schedules/Update",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Schedules",
										"Update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "183",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 13:18:21 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"b7-wFSMg3bpWPGwL1i1U+H/SSst7aU\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"(Rows matched: 1  Changed: 1  Warnings: 0\",\"protocol41\":true,\"changedRows\":1,\"success\":true}"
						}
					]
				},
				{
					"name": "GetScheduleById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6f932d0-bf09-4225-baaf-14c324271c66",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Check schedule was pulled\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(3);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Schedules/46",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Schedules",
								"46"
							]
						},
						"description": "Schedules: returns a schedule with corresponding id"
					},
					"response": [
						{
							"id": "53bf61ff-b5a0-4f2f-98a1-a727d8a9ab8a",
							"name": "GetScheduleById",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Schedules/2",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Schedules",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "65",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 15:25:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"41-XsvmQUWD4a2BB9k8hl0YrTh+XJ8\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"id\":2,\"courses\":\"7,8\",\"year\":2018,\"trimester\":1,\"success\":true}"
						}
					]
				},
				{
					"name": "GetSchedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36c6a746-bb1b-4925-afdc-27ee40c0c36a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Schedules",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Schedules"
							]
						},
						"description": "Schedules: Returns you all the schedules in db"
					},
					"response": [
						{
							"id": "290b6dc3-beed-473e-940f-9b64cf6d1428",
							"name": "GetSchedules",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Schedules",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Schedules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "51",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 12:21:02 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"33-90ujoi9GwCAenuUl8NZuxnAM5D4\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":1,\"courses\":null,\"year\":2018,\"trimester\":1}]"
						}
					]
				},
				{
					"name": "CreateSchedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "250d0ac3-ba55-4a56-8040-2c6145750bba",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Check new schedule was inserted\", function () {",
									"    var jsonData = pm.response.json();",
									"    var insertId = jsonData.insertId;",
									"    ",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    ",
									"    pm.sendRequest(\"http://devostrum.no-ip.info:6666/Schedules/\" + insertId, function (err, response) {",
									"        var data = response.json();",
									"        pm.expect(data.id).to.eql(insertId);",
									"    });",
									"});",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "year",
									"value": "2018",
									"description": "",
									"type": "text"
								},
								{
									"key": "trimester",
									"value": "1",
									"description": "",
									"type": "text"
								},
								{
									"key": "startDate",
									"value": "2018-4-10",
									"description": "",
									"type": "text"
								},
								{
									"key": "endDate",
									"value": "2018-7-10",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Schedules/",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Schedules",
								""
							]
						},
						"description": "Schedules: Add a new schedule to db"
					},
					"response": [
						{
							"id": "db594f8b-32c8-408a-a1ca-9532fa0ca83c",
							"name": "CreateSchedule",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "year",
											"value": "2018",
											"description": "",
											"type": "text"
										},
										{
											"key": "trimester",
											"value": "1",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Schedules/",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Schedules",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 12:20:35 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-THySFK25D42A8067YBNTA63MG34\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":1,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				},
				{
					"name": "GenerateSchedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21eaf119-c4b9-479e-b807-1ef0ce26b506",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"// pm.test(\"Body matches string\", function () {",
									"//     pm.expect(pm.response.text()).to.include(\"python file is alive\");",
									"// });",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "46",
									"description": "",
									"type": "text"
								},
								{
									"key": "",
									"value": "",
									"description": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Schedules/Generate",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Schedules",
								"Generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "FinalizeSchedule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "43",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Schedules/Finalized",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Schedules",
								"Finalized"
							]
						},
						"description": "Set finalized bit to one"
					},
					"response": []
				}
			]
		},
		{
			"name": "Courses",
			"description": "APIs related to courses, such as creating and deleting courses",
			"item": [
				{
					"name": "DeleteCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baea5747-9e26-4fa3-83ea-1e132cc5deb8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Check course exists no more\", function () {",
									"    pm.sendRequest(\"http://devostrum.no-ip.info:6666/Course/\" + \"9\", function (err, response) {",
									"        //var data = response.json();",
									"        //pm.expect(data.success).to.be.eql(false);",
									"    });",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "72",
									"description": "",
									"type": "text"
								},
								{
									"key": "schedule_id",
									"value": "25",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Courses/Delete",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Courses",
								"Delete"
							]
						},
						"description": "Courses: Deletes course with corresponding id. Updates parent schedule as well"
					},
					"response": [
						{
							"id": "06a24152-13eb-4d3a-a73b-d3e2dc886fb3",
							"name": "DeleteCourse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "77",
											"description": "",
											"type": "text"
										},
										{
											"key": "schedule_id",
											"value": "25",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Courses/Delete",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Courses",
										"Delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 22 Feb 2018 15:11:03 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-LqKBN6Jyh3mewN0Bb0EY5ul9swA\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				},
				{
					"name": "CreateCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7194df3e-5100-4e8e-822e-34d6f6c4beab",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"",
									"pm.test(\"Check new course was inserted\", function () {",
									"    var jsonData = pm.response.json();",
									"    var insertId = jsonData.insertId;",
									"    ",
									"    pm.sendRequest(\"http://devostrum.no-ip.info:6666/Courses/\" + insertId, function (err, response) {",
									"        var data = response.json();",
									"        pm.expect(data.id).to.eql(insertId);",
									"    });",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "schedule_id",
									"value": "25",
									"type": "text",
									"description": ""
								},
								{
									"key": "term",
									"value": "4",
									"type": "text",
									"description": ""
								},
								{
									"key": "course_no",
									"value": "50.003",
									"type": "text",
									"description": ""
								},
								{
									"key": "course_name",
									"value": "Elements of Software Construction",
									"type": "text",
									"description": ""
								},
								{
									"key": "core",
									"value": "1",
									"type": "text",
									"description": ""
								},
								{
									"key": "no_classes",
									"value": "3",
									"type": "text",
									"description": ""
								},
								{
									"key": "class_size",
									"value": "50",
									"type": "text",
									"description": ""
								},
								{
									"key": "no_sessions",
									"value": "3",
									"type": "text",
									"description": ""
								},
								{
									"key": "sessions_hrs",
									"value": "2,2,1",
									"type": "text",
									"description": ""
								},
								{
									"key": "class_types",
									"value": "Lecture,Lecture,Lecture",
									"type": "text",
									"description": ""
								},
								{
									"key": "instructors",
									"value": "Rayson,Oka Kurniawan|Rayson|Rayson",
									"type": "text",
									"description": ""
								},
								{
									"key": "split",
									"value": "1,1,1",
									"type": "text",
									"description": ""
								},
								{
									"key": "instructor_ids",
									"value": "4,31|4|4",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Courses",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Courses"
							]
						},
						"description": "Courses: Add a new course to db"
					},
					"response": [
						{
							"id": "92ec104d-4adc-459b-85fd-687ebfc8cce0",
							"name": "CreateCourse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "schedule_id",
											"value": "25",
											"type": "text",
											"description": ""
										},
										{
											"key": "term",
											"value": "1",
											"type": "text",
											"description": ""
										},
										{
											"key": "course_no",
											"value": "50.003",
											"type": "text",
											"description": ""
										},
										{
											"key": "course_name",
											"value": "Elements of Software Construction",
											"type": "text",
											"description": ""
										},
										{
											"key": "core",
											"value": "1",
											"type": "text",
											"description": ""
										},
										{
											"key": "no_classes",
											"value": "3",
											"type": "text",
											"description": ""
										},
										{
											"key": "class_size",
											"value": "50",
											"type": "text",
											"description": ""
										},
										{
											"key": "no_sessions",
											"value": "3",
											"type": "text",
											"description": ""
										},
										{
											"key": "session_hrs",
											"value": "2,2,1",
											"type": "text",
											"description": ""
										},
										{
											"key": "class_types",
											"value": "Lecture,Lecture,Lecture",
											"type": "text",
											"description": ""
										},
										{
											"key": "instructors",
											"value": "1,2,2,3,4",
											"type": "text",
											"description": ""
										},
										{
											"key": "split",
											"value": "1,1,1",
											"type": "text",
											"description": ""
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Courses",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Courses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "143",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Mar 2018 16:04:02 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8f-lAwZ3XFJ3WPJiC1GM5K4FGJOg/Q\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":46,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				},
				{
					"name": "GetAllCourses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ed2d696-96b5-4e94-be8e-3377bd75573f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									"pm.test(\"Check a specific course was pulled\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Elements of Software Construction\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Courses/",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Courses",
								""
							]
						},
						"description": "Gets array of all courses ever input into sql table"
					},
					"response": [
						{
							"id": "c69f4f9e-680b-465e-b60b-2a58b76ef92a",
							"name": "GetAllCourses",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Courses/",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Courses",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "2303",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 13 Mar 2018 01:06:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8ff-VGLVCw1EhCp/S/vlP8UAP7z3488\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":1,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":2,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":3,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":4,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":5,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":6,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":7,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":8,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":10,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":11,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":12,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":13,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":14,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":15,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"},{\"id\":16,\"schedule_id\":2,\"core\":1,\"no_sessions\":3,\"session_hrs\":\"2,2,1\",\"locations\":\"TT\",\"term\":1,\"instructors\":\"Rayson\",\"course_no\":\"\",\"course_name\":\"\"}]"
						}
					]
				},
				{
					"name": "GetCourseById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4811a4e4-b51a-4464-aa56-09eff02d0c2e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Courses/75",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Courses",
								"75"
							]
						},
						"description": "Retrieves rows in courses with course id"
					},
					"response": [
						{
							"id": "ebdcf1a2-a9d5-41fd-972a-68de64053b33",
							"name": "GetCourseById",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Courses/75",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Courses",
										"75"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "43",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 28 Mar 2018 07:03:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"2b-UtSKHcffQ2x2dSYeZuaiMMWvmKc\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"success\":false,\"message\":\"no rows found\"}"
						}
					]
				},
				{
					"name": "GetCourseBySchedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98eee658-3abb-468a-b47f-d339ae74b2c7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Courses/BySchedule/25",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Courses",
								"BySchedule",
								"25"
							]
						},
						"description": "Returns all the courses with associated schedule id"
					},
					"response": [
						{
							"id": "d22908d8-c6cd-4fb9-a040-20acec8592b6",
							"name": "GetCourseBySchedule",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Courses/BySchedule/25",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Courses",
										"BySchedule",
										"25"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "2689",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Apr 2018 02:30:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"a81-BO9d5RGQ2yEpwS+1WoXf6aoP/AY\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":58,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"31,31,31\",\"instructor_ids\":\"\",\"split\":\"1,1,1\"},{\"id\":68,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"31,31,31\",\"instructor_ids\":\"\",\"split\":\"1,1,1\"},{\"id\":69,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"31,31,31\",\"instructor_ids\":\"\",\"split\":\"1,1,1\"},{\"id\":70,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"31,31,31\",\"instructor_ids\":\"\",\"split\":\"1,1,1\"},{\"id\":76,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"31,31,31\",\"instructor_ids\":\"\",\"split\":\"1,1,1\"},{\"id\":78,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"31,31,31\",\"instructor_ids\":\"\",\"split\":\"1,1,1\"},{\"id\":88,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"Rayson, Oka Kurniawan|Rayson|Rayson\",\"instructor_ids\":\"4,31|4|4\",\"split\":\"1,1,1\"},{\"id\":89,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"Rayson, Oka Kurniawan|Rayson|Rayson\",\"instructor_ids\":\"4,31|4|4\",\"split\":\"1,1,1\"},{\"id\":90,\"schedule_id\":25,\"term\":1,\"course_no\":\"50.003\",\"course_name\":\"Elements of Software Construction\",\"core\":1,\"no_classes\":3,\"class_size\":50,\"no_sessions\":3,\"sessions_hrs\":\"2,2,1\",\"class_types\":\"Lecture,Lecture,Lecture\",\"instructors\":\"Rayson, Oka Kurniawan|Rayson|Rayson\",\"instructor_ids\":\"4,31|4|4\",\"split\":\"1,1,1\"}]"
						}
					]
				},
				{
					"name": "UpdateCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dad61011-96c5-4d63-b228-ced0e0dd6bb8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "88",
									"description": "",
									"type": "text"
								},
								{
									"key": "term",
									"value": "4",
									"description": "",
									"type": "text"
								},
								{
									"key": "course_no",
									"value": "50.004",
									"description": "",
									"type": "text"
								},
								{
									"key": "course_name",
									"value": "Computer System Engineering",
									"description": "",
									"type": "text"
								},
								{
									"key": "core",
									"value": "1",
									"description": "",
									"type": "text"
								},
								{
									"key": "no_classes",
									"value": "3",
									"description": "",
									"type": "text"
								},
								{
									"key": "class_size",
									"value": "50",
									"description": "",
									"type": "text"
								},
								{
									"key": "no_sessions",
									"value": "3",
									"description": "",
									"type": "text"
								},
								{
									"key": "sessions_hrs",
									"value": "2,2,2",
									"description": "",
									"type": "text"
								},
								{
									"key": "class_types",
									"value": "Cohort Based Learning,Cohort Based Learning,Cohort Based Learning",
									"description": "",
									"type": "text"
								},
								{
									"key": "instructors",
									"value": "David Yau,Jit Biswas|David Yau,Jit Biswas|David Yau,Jit Biswas",
									"description": "",
									"type": "text"
								},
								{
									"key": "instructor_ids",
									"value": "58,32|58,32|58,32",
									"description": "",
									"type": "text"
								},
								{
									"key": "split",
									"value": "1,1,1",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "devostrum.no-ip.info:6666/Courses/Update",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Courses",
								"Update"
							]
						},
						"description": "Updates details of a course entry"
					},
					"response": [
						{
							"id": "adddaa7e-fb5f-4e8f-a330-bcc5e3ced809",
							"name": "UpdateCourse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "88",
											"description": "",
											"type": "text"
										},
										{
											"key": "term",
											"value": "4",
											"description": "",
											"type": "text"
										},
										{
											"key": "course_no",
											"value": "50.004",
											"description": "",
											"type": "text"
										},
										{
											"key": "course_name",
											"value": "Computer System Engineering",
											"description": "",
											"type": "text"
										},
										{
											"key": "core",
											"value": "1",
											"description": "",
											"type": "text"
										},
										{
											"key": "no_classes",
											"value": "3",
											"description": "",
											"type": "text"
										},
										{
											"key": "class_size",
											"value": "50",
											"description": "",
											"type": "text"
										},
										{
											"key": "no_sessions",
											"value": "3",
											"description": "",
											"type": "text"
										},
										{
											"key": "sessions_hrs",
											"value": "2,2,2",
											"description": "",
											"type": "text"
										},
										{
											"key": "class_types",
											"value": "Cohort Based Learning,Cohort Based Learning,Cohort Based Learning",
											"description": "",
											"type": "text"
										},
										{
											"key": "instructors",
											"value": "David Yau,Jit Biswas|David Yau,Jit Biswas|David Yau,Jit Biswas",
											"description": "",
											"type": "text"
										},
										{
											"key": "instructor_ids",
											"value": "58,32|58,32|58,32",
											"description": "",
											"type": "text"
										},
										{
											"key": "split",
											"value": "1,1,1",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "devostrum.no-ip.info:6666/Courses/Update",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Courses",
										"Update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "183",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Apr 2018 15:41:51 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"b7-wFSMg3bpWPGwL1i1U+H/SSst7aU\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"(Rows matched: 1  Changed: 1  Warnings: 0\",\"protocol41\":true,\"changedRows\":1,\"success\":true}"
						}
					]
				}
			]
		},
		{
			"name": "Notifications",
			"description": "Contains http requests to add, delete and get notifications",
			"item": [
				{
					"name": "CreateNotifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6071d4f4-e71c-4a6e-8867-91ed04bd7ece",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Project due in two weeks!",
									"description": "",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Oh no rush rush get shit together",
									"description": "",
									"type": "text"
								},
								{
									"key": "sender",
									"value": "Rayson",
									"description": "",
									"type": "text"
								},
								{
									"key": "senderId",
									"value": "4",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Notifications/",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Notifications",
								""
							]
						},
						"description": "Adds a new notification row to database"
					},
					"response": [
						{
							"id": "a0499e10-d8a8-40ac-911e-2bde5dca9107",
							"name": "CreateNotifications",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "Project due in two weeks!",
											"description": "",
											"type": "text"
										},
										{
											"key": "content",
											"value": "Oh no rush rush get shit together",
											"description": "",
											"type": "text"
										},
										{
											"key": "sender",
											"value": "Rayson",
											"description": "",
											"type": "text"
										},
										{
											"key": "senderId",
											"value": "4",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Notifications/",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Notifications",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 28 Mar 2018 08:20:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-THySFK25D42A8067YBNTA63MG34\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":1,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				},
				{
					"name": "GetAllNotifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98527ceb-6a90-4475-b789-c3274491f692",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Notifications/",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Notifications",
								""
							]
						},
						"description": "Get all rows in the notifications database"
					},
					"response": [
						{
							"id": "e9a93231-b902-4d96-b6ed-0d2346e525f6",
							"name": "GetAllNotifications",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Notifications/",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Notifications",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "137",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 28 Mar 2018 08:20:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"89-isnhqT27qQa/EpYPM6MDPygkAB0\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":1,\"title\":\"Project due in two weeks!\",\"content\":\"Oh no rush rush get shit together\",\"date\":\"2018-03-28T08:20:06.000Z\",\"sender\":4}]"
						}
					]
				},
				{
					"name": "DeleteNotification",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a327d17-89c6-4ea2-b819-a7f469ef2867",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1dac3e98-1c97-4e87-a866-f74a49ace4a3",
								"type": "text/javascript",
								"exec": [
									"// pm.sendRequest({",
									"//     url: \"http://devostrum.no-ip.info:6666/Notifications/\",",
									"//     method: 'POST',",
									"//     header: 'Content-Type:application/x-www-form-urlencoded',",
									"//     body: {",
									"//         title: 'to be deleted',",
									"//         content: 'to be deleted',",
									"//         sender: 'Rayson',",
									"//         senderId: '4'",
									"//         }",
									"// }, function (err, response) {",
									"//     console.log(response.json());",
									"//     pm.globals.set(\"insert_key\", response.insertId);",
									"// });",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "1",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Notifications/Delete",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Notifications",
								"Delete"
							]
						},
						"description": "Delete a row in notification table. Requires notification id. "
					},
					"response": [
						{
							"id": "e07aa83f-3c09-4cf6-ba5d-ed0be2712e7e",
							"name": "DeleteNotification",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "1",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Notifications/Delete",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Notifications",
										"Delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 28 Mar 2018 08:21:35 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-LqKBN6Jyh3mewN0Bb0EY5ul9swA\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				}
			]
		},
		{
			"name": "Calendars",
			"description": "Contains API Endpoints for creating and getting calendar events",
			"item": [
				{
					"name": "CreateEvent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17ae6b71-b291-4ce6-bc57-6f5d66ecc3a1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "schedule_id",
									"value": "25",
									"description": "",
									"type": "text"
								},
								{
									"key": "term",
									"value": "4",
									"description": "",
									"type": "text"
								},
								{
									"key": "pillar",
									"value": "null",
									"description": "",
									"type": "text"
								},
								{
									"key": "course",
									"value": "title",
									"description": "",
									"type": "text"
								},
								{
									"key": "prof",
									"value": "null",
									"description": "",
									"type": "text"
								},
								{
									"key": "prof_id",
									"value": "null",
									"description": "",
									"type": "text"
								},
								{
									"key": "cohort",
									"value": "null",
									"description": "",
									"type": "text"
								},
								{
									"key": "location",
									"value": "Cohort Classroom 14",
									"description": "",
									"type": "text"
								},
								{
									"key": "day",
									"value": "null",
									"description": "",
									"type": "text"
								},
								{
									"key": "start",
									"value": "10",
									"description": "",
									"type": "text"
								},
								{
									"key": "end",
									"value": "12",
									"description": "",
									"type": "text"
								},
								{
									"key": "date",
									"value": "2019-08-12",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								""
							]
						},
						"description": "Creates a new event in the database"
					},
					"response": []
				},
				{
					"name": "GetFreeTimeSlots",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd14442d-d179-4426-9cbc-e03b81a39764",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/Filter/46/////",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"Filter",
								"46",
								"",
								"",
								"",
								"",
								""
							]
						},
						"description": "Get free time slots based on what filters params you put in. "
					},
					"response": [
						{
							"id": "239cee25-c3f1-4473-9f92-5d27742d71f2",
							"name": "GetFreeTimeSlots",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Calendars/Filter/26////9/11",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Calendars",
										"Filter",
										"26",
										"",
										"",
										"",
										"9",
										"11"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "16737",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 04 Apr 2018 13:16:36 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"4161-oLV3trA3cF9vQvHibnRyLSci4WI\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"Think Tank 1\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 2\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 3\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 4\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 5\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 6\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 7\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 8\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 9\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 10\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 11\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 12\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 13\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 14\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 15\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 16\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 17\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 18\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 19\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 20\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 21\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 22\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 23\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 24\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 25\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Think Tank 26\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 1\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 2\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 3\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 4\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 5\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 6\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 7\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 8\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 9\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 10\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 11\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 12\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 13\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 14\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 15\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Cohort Classroom 16\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Lecture Theatre 1\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Lecture Theatre 2\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Lecture Theatre 3\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Lecture Theatre 4\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]},\"Lecture Theatre 5\":{\"Thu Apr 05 2018\":[9,10,11],\"Fri Apr 06 2018\":[9,10,11],\"Mon Apr 09 2018\":[9,10,11],\"Tue Apr 10 2018\":[9,10,11],\"Wed Apr 11 2018\":[9,10,11],\"Thu Apr 12 2018\":[9,10,11],\"Fri Apr 13 2018\":[9,10,11],\"Mon Apr 16 2018\":[9,10,11],\"Tue Apr 17 2018\":[9,10,11],\"Wed Apr 18 2018\":[9,10,11],\"Thu Apr 19 2018\":[9,10,11],\"Fri Apr 20 2018\":[9,10,11]}}"
						}
					]
				},
				{
					"name": "GetEventsBySchedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6dbea374-8214-4584-bf77-c6d19e1b597e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/25",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"25"
							]
						},
						"description": "Get all entries in calendar table corresponding to specified schedule id"
					},
					"response": []
				},
				{
					"name": "GetFullCalendarFormat",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bd3fd0d-1113-4d33-922a-185b62c01161",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/FullCalendar/45",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"FullCalendar",
								"45"
							]
						},
						"description": "Retrieves calendar entries in full calendar format for the specified schedule id"
					},
					"response": [
						{
							"id": "8689c325-7f4c-4100-bf3f-0e07bc1df774",
							"name": "GetFullCalendarFormat",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Calendars/FullCalendar/25",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Calendars",
										"FullCalendar",
										"25"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "1343",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Apr 2018 14:27:01 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"53f-J2QUFIMndsF2ui69XyJ224k/w4E\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"instructor\":\"Rayson\",\"id\":\"4\",\"pillar\":\"ISTD\",\"schedule\":[{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"08:30\",\"end\":\"10:30\",\"dow\":\"1\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"13:30\",\"end\":\"15:30\",\"dow\":\"2\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"12:30\",\"end\":\"14:30\",\"dow\":\"1\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"08:30\",\"end\":\"09:30\",\"dow\":\"3\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"15:30\",\"end\":\"17:30\",\"dow\":\"2\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"10:30\",\"end\":\"12:30\",\"dow\":\"1\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"11:30\",\"end\":\"13:30\",\"dow\":\"2\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"10:30\",\"end\":\"11:30\",\"dow\":\"3\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"09:30\",\"end\":\"10:30\",\"dow\":\"3\"}]},{\"instructor\":\"Oka Kurniawan\",\"id\":\"31\",\"pillar\":\"ISTD\",\"schedule\":[{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"10:30\",\"end\":\"12:30\",\"dow\":\"1\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"08:30\",\"end\":\"10:30\",\"dow\":\"1\"},{\"title\":\"50.003\\nLecture Theatre 2\\nCohort 1\",\"start\":\"12:30\",\"end\":\"14:30\",\"dow\":\"1\"}]},{\"instructor\":\"Sudipta\",\"id\":\"33\",\"pillar\":\"ISTD\",\"schedule\":[{\"title\":\"50.003\\nCohort Classroom 14\\nCohort 2\",\"start\":\"13:30\",\"end\":\"15:00\",\"dow\":\"1\"}]}]"
						}
					]
				},
				{
					"name": "GetGoogleCalendarFormat",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77038be3-02d3-4f74-b161-8cb56aa287f7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/GoogleCalendar/31",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"GoogleCalendar",
								"31"
							]
						},
						"description": "Get calendar entries in the format required for Google Calendar"
					},
					"response": [
						{
							"id": "60c71691-83d1-43c0-bfd7-dfe24a27ca49",
							"name": "GetGoogleCalendarFormat",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Calendars/GoogleCalendar/25",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Calendars",
										"GoogleCalendar",
										"25"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "2637",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Apr 2018 14:28:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"a4d-8NPPUrPvUK2wOmSCHMmXtIPYk3g\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"instructor\":\"Rayson\",\"id\":4,\"pillar\":\"ISTD\",\"schedule\":[{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"08:30 AM\",\"End Time\":\"10:30 AM\",\"Start Date\":\"2018/04/09\",\"End Date\":\"2018/04/09\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"01:30 PM\",\"End Time\":\"03:30 PM\",\"Start Date\":\"2018/04/10\",\"End Date\":\"2018/04/10\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"12:30 PM\",\"End Time\":\"02:30 PM\",\"Start Date\":\"2018/04/09\",\"End Date\":\"2018/04/09\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"08:30 AM\",\"End Time\":\"09:30 AM\",\"Start Date\":\"2018/04/11\",\"End Date\":\"2018/04/11\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"03:30 PM\",\"End Time\":\"05:30 PM\",\"Start Date\":\"2018/04/10\",\"End Date\":\"2018/04/10\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"10:30 AM\",\"End Time\":\"12:30 PM\",\"Start Date\":\"2018/04/09\",\"End Date\":\"2018/04/09\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"11:30 AM\",\"End Time\":\"01:30 PM\",\"Start Date\":\"2018/04/10\",\"End Date\":\"2018/04/10\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"10:30 AM\",\"End Time\":\"11:30 AM\",\"Start Date\":\"2018/04/11\",\"End Date\":\"2018/04/11\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"09:30 AM\",\"End Time\":\"10:30 AM\",\"Start Date\":\"2018/04/11\",\"End Date\":\"2018/04/11\",\"Private\":true}]},{\"instructor\":\"Oka Kurniawan\",\"id\":31,\"pillar\":\"ISTD\",\"schedule\":[{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"10:30 AM\",\"End Time\":\"12:30 PM\",\"Start Date\":\"2018/04/09\",\"End Date\":\"2018/04/09\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"08:30 AM\",\"End Time\":\"10:30 AM\",\"Start Date\":\"2018/04/09\",\"End Date\":\"2018/04/09\",\"Private\":true},{\"Subject\":\"50.003\",\"Location\":\"Lecture Theatre 2\",\"Description\":\"Cohort 1\",\"Start Time\":\"12:30 PM\",\"End Time\":\"02:30 PM\",\"Start Date\":\"2018/04/09\",\"End Date\":\"2018/04/09\",\"Private\":true}]},{\"instructor\":\"Sudipta\",\"id\":33,\"pillar\":\"ISTD\",\"schedule\":[{\"Subject\":\"50.003\",\"Location\":\"Cohort Classroom 14\",\"Description\":\"Cohort 2\",\"Start Time\":\"01:30 PM\",\"End Time\":\"03:00 PM\",\"Start Date\":\"2018/04/09\",\"End Date\":\"2018/04/09\",\"Private\":true}]}]"
						}
					]
				},
				{
					"name": "GetEventsByProfId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2694c942-9f80-4c66-ab88-b9a323374015",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/Prof/46/103",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"Prof",
								"46",
								"103"
							]
						},
						"description": "Returns all events with associated prof id and schedule id"
					},
					"response": [
						{
							"id": "69f35ca4-859e-4cd4-81ce-26a92cce2116",
							"name": "GetEventsByProfId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Calendars/Prof/25/4",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Calendars",
										"Prof",
										"25",
										"4"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "1644",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Apr 2018 15:26:10 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"66c-fsnKqs1h5m4Qdc76laAr1lgo3xg\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":14,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":0,\"end\":3},{\"id\":15,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":2,\"date\":null,\"start\":6,\"end\":9},{\"id\":16,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":2,\"date\":null,\"start\":14,\"end\":17},{\"id\":17,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":3,\"date\":null,\"start\":2,\"end\":3},{\"id\":18,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":2,\"date\":null,\"start\":10,\"end\":13},{\"id\":19,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":8,\"end\":11},{\"id\":20,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":4,\"end\":7},{\"id\":22,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":3,\"date\":null,\"start\":4,\"end\":5},{\"id\":23,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":3,\"date\":null,\"start\":0,\"end\":1}]"
						}
					]
				},
				{
					"name": "GetEventsByPillar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "172fe9cf-fc02-4595-9a66-f059a8fa3f00",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/Pillar/3/ISTD",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"Pillar",
								"3",
								"ISTD"
							]
						},
						"description": "Returns all events with associated pillar name and schedule id"
					},
					"response": [
						{
							"id": "1d65a8c2-1103-4dac-9949-0d584a366967",
							"name": "GetEventsByPillar",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Calendars/Pillar/25/ISTD",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Calendars",
										"Pillar",
										"25",
										"ISTD"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "2203",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 05 Apr 2018 15:27:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"89b-dugSm6AIP7vQDn/cq42zWm/M0mI\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":14,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":0,\"end\":3},{\"id\":15,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":2,\"date\":null,\"start\":6,\"end\":9},{\"id\":16,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":2,\"date\":null,\"start\":14,\"end\":17},{\"id\":17,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":3,\"date\":null,\"start\":2,\"end\":3},{\"id\":18,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":2,\"date\":null,\"start\":10,\"end\":13},{\"id\":19,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":8,\"end\":11},{\"id\":20,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":4,\"end\":7},{\"id\":21,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Oka Kurniawan\",\"prof_id\":31,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":0,\"end\":3},{\"id\":22,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":3,\"date\":null,\"start\":4,\"end\":5},{\"id\":23,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Rayson Lim\",\"prof_id\":4,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":3,\"date\":null,\"start\":0,\"end\":1},{\"id\":24,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Oka Kurniawan\",\"prof_id\":31,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":4,\"end\":7},{\"id\":25,\"schedule_id\":25,\"term\":5,\"pillar\":\"ISTD\",\"course\":\"50.003\",\"prof\":\"Oka Kurniawan\",\"prof_id\":31,\"cohort\":1,\"location\":\"Lecture Theatre 2\",\"day\":1,\"date\":null,\"start\":8,\"end\":11}]"
						}
					]
				},
				{
					"name": "GetNonCourseEvents",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/Events/25",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"Events",
								"25"
							]
						},
						"description": "Get all events from the calendar, that are not courses, and belong to specified schedule id"
					},
					"response": [
						{
							"id": "a2542828-ca22-42c7-bf44-5ec729071e42",
							"name": "GetNonCourseEvents",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Calendars/Events/25",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Calendars",
										"Events",
										"25"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "43",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 07 Apr 2018 02:48:04 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"2b-UtSKHcffQ2x2dSYeZuaiMMWvmKc\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"success\":false,\"message\":\"no rows found\"}"
						}
					]
				},
				{
					"name": "DeleteEvent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "323",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/Delete",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"Delete"
							]
						},
						"description": "Deletes one event entry in the database"
					},
					"response": []
				},
				{
					"name": "UpdateEvent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "302",
									"description": "",
									"type": "text"
								},
								{
									"key": "day",
									"value": "1",
									"description": "",
									"type": "text"
								},
								{
									"key": "start",
									"value": "15:00",
									"description": "",
									"type": "text"
								},
								{
									"key": "end",
									"value": "17:30",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/Update",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"Update"
							]
						},
						"description": "Updates some details of an event in the database. Does not support updating of date. "
					},
					"response": [
						{
							"id": "24aef235-68aa-4bae-a829-56263638ae5d",
							"name": "UpdateEvent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "302",
											"description": "",
											"type": "text"
										},
										{
											"key": "pillar",
											"value": "HASS",
											"description": "",
											"type": "text"
										},
										{
											"key": "course",
											"value": "02.103",
											"description": "",
											"type": "text"
										},
										{
											"key": "day",
											"value": "1",
											"description": "",
											"type": "text"
										},
										{
											"key": "start",
											"value": "15:00",
											"description": "",
											"type": "text"
										},
										{
											"key": "end",
											"value": "17:30",
											"description": "",
											"type": "text"
										},
										{
											"key": "prof",
											"value": "Angelia Lau",
											"description": "",
											"type": "text"
										},
										{
											"key": "prof_id",
											"value": "34",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Calendars/Update",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Calendars",
										"Update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "183",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 10 Apr 2018 13:35:50 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"b7-wFSMg3bpWPGwL1i1U+H/SSst7aU\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"(Rows matched: 1  Changed: 1  Warnings: 0\",\"protocol41\":true,\"changedRows\":1,\"success\":true}"
						}
					]
				},
				{
					"name": "GetEditableCalendar",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Calendars/EditCalendar/31",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Calendars",
								"EditCalendar",
								"31"
							]
						},
						"description": "Get calendar in editable format"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "54b85213-886c-4118-b62a-2fd4a4fee136",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "93f4620f-1c69-4b74-bd52-607fc547b11d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Appeals",
			"description": "Contains API endpoints of appeals, including creating, getting and deleting appeals",
			"item": [
				{
					"name": "CreateAppeal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09d15c79-9510-4ff0-a0e8-4d5b348f8398",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "Eat Ramen",
									"description": "",
									"type": "text"
								},
								{
									"key": "content",
									"value": "I am tired",
									"description": "",
									"type": "text"
								},
								{
									"key": "instructor",
									"value": "Rayson",
									"description": "",
									"type": "text"
								},
								{
									"key": "instructorId",
									"value": "4",
									"description": "",
									"type": "text"
								},
								{
									"key": "pillar",
									"value": "ISTD",
									"description": "",
									"type": "text"
								},
								{
									"key": "scheduleId",
									"value": "25",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Appeals/",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Appeals",
								""
							]
						},
						"description": "Adding a new appeal to db"
					},
					"response": [
						{
							"id": "6de70925-a9c3-49d2-a6d3-f9a22c8aab08",
							"name": "CreateAppeal",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "Eat Ramen",
											"description": "",
											"type": "text"
										},
										{
											"key": "content",
											"value": "I am tired",
											"description": "",
											"type": "text"
										},
										{
											"key": "instructor",
											"value": "Rayson",
											"description": "",
											"type": "text"
										},
										{
											"key": "instructorId",
											"value": "4",
											"description": "",
											"type": "text"
										},
										{
											"key": "pillar",
											"value": "ISTD",
											"description": "",
											"type": "text"
										},
										{
											"key": "scheduleId",
											"value": "25",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Appeals/",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Appeals",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 02 Apr 2018 16:17:33 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-WV+gELqIQComkUTYAt6x3bSj4ZY\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":3,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				},
				{
					"name": "GetAppealById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb1981c0-cfea-4579-bd76-783522c60673",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Appeals/3",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Appeals",
								"3"
							]
						},
						"description": "Gets appeal corresponding to id from db"
					},
					"response": [
						{
							"id": "b4c8c7ee-b13c-4188-a252-5ce56ec910e8",
							"name": "GetAppealById",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Appeals/3",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Appeals",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "171",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 02 Apr 2018 16:19:11 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"ab-vurXEDwJOCMhjjbFPK6okzeyH8o\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"id\":3,\"title\":\"Eat Ramen\",\"content\":\"I am tired\",\"date\":\"2018-04-02T16:17:33.000Z\",\"instructor\":\"Rayson\",\"instructorId\":4,\"pillar\":\"ISTD\",\"scheduleId\":25,\"success\":true}"
						}
					]
				},
				{
					"name": "GetAllAppeals",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dfb06019-18c3-495f-a96d-ed688fbb4ea5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Appeals/",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Appeals",
								""
							]
						},
						"description": "Get all appeals from db"
					},
					"response": [
						{
							"id": "16182885-a960-47be-b1f5-6771fada9a61",
							"name": "GetAllAppeals",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Appeals/",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Appeals",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "339",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 02 Apr 2018 16:21:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"153-ucH+dDBU3ti1SV4rcGe/zkKso34\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":1,\"title\":\"Appeal for Lunch break\",\"content\":\"I need to eat\",\"date\":\"2018-04-02T14:54:12.000Z\",\"instructor\":\"Oka Kurniawan\",\"instructorId\":31,\"pillar\":\"ISTD\",\"scheduleId\":25},{\"id\":3,\"title\":\"Eat Ramen\",\"content\":\"I am tired\",\"date\":\"2018-04-02T16:17:33.000Z\",\"instructor\":\"Rayson\",\"instructorId\":4,\"pillar\":\"ISTD\",\"scheduleId\":25}]"
						}
					]
				},
				{
					"name": "GetAppealByInstructor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d518285-08f3-4057-8773-a22cb505fbd8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Appeals/Instructor/4/25",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Appeals",
								"Instructor",
								"4",
								"25"
							]
						},
						"description": "Returns appeals submitted by instructor for specific schedule"
					},
					"response": [
						{
							"id": "132c1e49-3f88-4099-ad2e-9bbf60d76c16",
							"name": "GetAppealByInstructor",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Appeals/Instructor/4/25",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Appeals",
										"Instructor",
										"4",
										"25"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "158",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 02 Apr 2018 16:23:26 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"9e-PIEWLF1NlzCBYsUP/dKB7c3FVx4\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":3,\"title\":\"Eat Ramen\",\"content\":\"I am tired\",\"date\":\"2018-04-02T16:17:33.000Z\",\"instructor\":\"Rayson\",\"instructorId\":4,\"pillar\":\"ISTD\",\"scheduleId\":25}]"
						}
					]
				},
				{
					"name": "GetAppealsByPillar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "082aea1b-8304-4505-a028-cf35b3155f56",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Appeals/Pillar/ISTD/25",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Appeals",
								"Pillar",
								"ISTD",
								"25"
							]
						},
						"description": "Gets all appeals submitted for specific pillar for specific schedule"
					},
					"response": [
						{
							"id": "c079d86e-e823-4281-8fea-cc402a1b6222",
							"name": "GetAppealsByPillar",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Appeals/Pillar/ISTD/25",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Appeals",
										"Pillar",
										"ISTD",
										"25"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "339",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 02 Apr 2018 16:24:45 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"153-ucH+dDBU3ti1SV4rcGe/zkKso34\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":1,\"title\":\"Appeal for Lunch break\",\"content\":\"I need to eat\",\"date\":\"2018-04-02T14:54:12.000Z\",\"instructor\":\"Oka Kurniawan\",\"instructorId\":31,\"pillar\":\"ISTD\",\"scheduleId\":25},{\"id\":3,\"title\":\"Eat Ramen\",\"content\":\"I am tired\",\"date\":\"2018-04-02T16:17:33.000Z\",\"instructor\":\"Rayson\",\"instructorId\":4,\"pillar\":\"ISTD\",\"scheduleId\":25}]"
						}
					]
				},
				{
					"name": "DeleteAppeal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "677a350d-8d99-440f-a294-4914a7fcb554",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must be valid and have a body\", function () {",
									"     // assert that the status code is 200",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
									"     // assert that the response has a valid JSON body",
									"     pm.response.to.be.withBody;",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
									"});",
									"",
									"pm.test(\"No Errors found\", function () {",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "3",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Appeals/Delete",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Appeals",
								"Delete"
							]
						},
						"description": "Deletes appeal with specified appeal id"
					},
					"response": [
						{
							"id": "f5c6ad6c-4135-413a-90e6-9fd4d67528d6",
							"name": "DeleteAppeal",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id",
											"value": "3",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Appeals/Delete",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Appeals",
										"Delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 02 Apr 2018 16:26:46 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-LqKBN6Jyh3mewN0Bb0EY5ul9swA\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":0,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				}
			]
		},
		{
			"name": "Replies",
			"description": "It is used when an administrator wants to reply instructors after reading their appeals",
			"item": [
				{
					"name": "CreateReply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "First reply",
									"description": "",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Rayson is the best",
									"description": "",
									"type": "text"
								},
								{
									"key": "instructor",
									"value": "Rayson Lim",
									"description": "",
									"type": "text"
								},
								{
									"key": "instructorId",
									"value": "49",
									"description": "",
									"type": "text"
								},
								{
									"key": "scheduleId",
									"value": "46",
									"description": "",
									"type": "text"
								},
								{
									"key": "sender",
									"value": "Jit Biswas",
									"description": "",
									"type": "text"
								},
								{
									"key": "senderId",
									"value": "32",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Replies/",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Replies",
								""
							]
						},
						"description": "Adds a reply entry to database"
					},
					"response": [
						{
							"id": "9162e3b6-92b4-472b-a0ee-77fb8b859358",
							"name": "CreateReply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"disabled": false
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "First reply",
											"description": "",
											"type": "text"
										},
										{
											"key": "content",
											"value": "Rayson is the best",
											"description": "",
											"type": "text"
										},
										{
											"key": "instructor",
											"value": "Rayson Lim",
											"description": "",
											"type": "text"
										},
										{
											"key": "instructorId",
											"value": "49",
											"description": "",
											"type": "text"
										},
										{
											"key": "scheduleId",
											"value": "46",
											"description": "",
											"type": "text"
										},
										{
											"key": "sender",
											"value": "Jit Biswas",
											"description": "",
											"type": "text"
										},
										{
											"key": "senderId",
											"value": "32",
											"description": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Replies/",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Replies",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "142",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 13 Apr 2018 14:04:19 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"8e-THySFK25D42A8067YBNTA63MG34\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"fieldCount\":0,\"affectedRows\":1,\"insertId\":1,\"serverStatus\":2,\"warningCount\":0,\"message\":\"\",\"protocol41\":true,\"changedRows\":0,\"success\":true}"
						}
					]
				},
				{
					"name": "GetRepliesByInstructorId",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Replies/Instructor/49",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Replies",
								"Instructor",
								"49"
							]
						}
					},
					"response": [
						{
							"id": "1bc27617-643c-4e0d-b618-565087edccd2",
							"name": "GetRepliesByInstructorId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://devostrum.no-ip.info:6666/Replies/Instructor/49",
									"protocol": "http",
									"host": [
										"devostrum",
										"no-ip",
										"info"
									],
									"port": "6666",
									"path": [
										"Replies",
										"Instructor",
										"49"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "193",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 13 Apr 2018 14:05:52 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"c1-VML2jClGZFEwqZk2zdwc9q9c7TU\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "[{\"id\":1,\"title\":\"First reply\",\"content\":\"Rayson is the best\",\"date\":\"2018-04-13T14:04:19.000Z\",\"instructor\":\"Rayson Lim\",\"instructorId\":49,\"scheduleId\":46,\"sender\":\"Jit Biswas\",\"senderId\":32}]"
						}
					]
				},
				{
					"name": "DeleteReply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "id",
									"value": "2",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://devostrum.no-ip.info:6666/Replies/Delete",
							"protocol": "http",
							"host": [
								"devostrum",
								"no-ip",
								"info"
							],
							"port": "6666",
							"path": [
								"Replies",
								"Delete"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}